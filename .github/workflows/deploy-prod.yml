name: Production deployment

on: 
  push:
    branches:
      - master

jobs:
  started-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GithubActions # Optional. (defaults to webhook app)
          SLACK_CHANNEL: deployments # Optional. (defaults to webhook)
          SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
          SLACK_CUSTOM_PAYLOAD: '{"attachments": [{"text": "STARTED : GITHUB_REPOSITORY  \n GITHUB_REF ","color": "#FFFF00"}]}'
          # SLACK_CUSTOM_PAYLOAD: '{"attachments": [{"text": "Started And hereâ€™s an attachment!  \n s","color": "#7CD197"}]}'
        uses: Ilshidur/action-slack@master
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: npm install and build webpack
        run: |
          npm install
          npm run buildt
      - uses: actions/upload-artifact@master
        with:
          name: webpack artifacts
          path: public/

      - name: Slack notification
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GithubActions 
          SLACK_CHANNEL: deployments 
          SLACK_AVATAR: repository 
          failure: "#7CD197"
          success: "#ffffff"
          SLACK_CUSTOM_PAYLOAD: '{"attachments": [{"text": "STARTED : GITHUB_REPOSITORY   \n GITHUB_REF ","color": ${{ job.status }} }]}'
        uses: Ilshidur/action-slack@master


  # deploy:
  #   name: Deploy Node.js app to AWS
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Download built artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: webpack artifacts
  #         path: public

  #     - name: Deploy to AWS
  #       uses:  github/deploy-nodejs@master
  #       env:
  #         AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  #         AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

  # Build-and-Push-Docker-Image:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   name: Docker Build, Tag, Push
  #   steps:
     
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     - name: Download built artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: webpack artifacts
  #         path: public

  #     - name: Build, Tag, Push
  #       uses: mattdavis0351/actions/docker-gpr@v1
  #       with:
  #         repo-token: ${{ secrets.GITHUB_TOKEN }}
  #         image-name: KariApz-aws-ttt